<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAQ
        2gAAENoBWe87xgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASTSURBVHhe5Zvb
        ixNXHMfTWov6ULVaEC1F7Vyi6/2CFeulVek/YIsPVQT1qaBCfVBUWBAUfBDUWnPOifVNMQgK1s3MZJd9
        q4JtrYJvgg/itWrrHa/x99tNsjNzfkkmySTZOfPwyWZ+M+f3O9/vzuXknCSRz+djDRmME2SwGXxppTXT
        ET9S+9oJGQybZDc3DJvfNGy2jdrfTshgmJjZo2a/eJ6PnQEgOAnCb/WLj5kBek5MMWxxe0B8jAzQulJT
        QfAdr/iYGKBZvAPE3pXFx8CAZI5NB6H3ZOFFFDbAzIoZhsX/pYUXUdQAw0rNhBvefVq0GwUN0B0+K5h4
        RDEDNIvNAWEPZKHlUMiApC3mgqiHsshKKGKA6aTmgaD/ZIHVUMAAI8vng5g6xCMRN0C32QIQ8r8sLCgR
        NkDLia9AxCNZVC2Ii4bDD8HfvbrNd5qW2GI4bEMyx79LZo9MTHR2fkjVbiZk0I+WTS0EAQ2KD8Rz4DIM
        qI4Da6b//utoqj9hQgbdmE56EXTqsauTreQ10AOX3qbJOfYF1b9GIYNFjBz7GjrwxNWh9mKxv8GMHRN7
        j42i+lsPZBDR7dQSKDp4xHsQ9/H+0ZHJfEz1vRbIoObwpVDoqVx40HHNdNj3lIagSAHTYt+YNn9GFBvE
        iIzWdfATv5YgeDZMW3wbPfElrhi9bKxbTxBKb+CxswKS4GOISh4V/kl2/zLGLbAafS+6LVZC46iL7wee
        FLWMHxI4CoOGL6REEQYu47+CPioT0OCMP4EaiIsweBpJiXaTAKeG6Ra36CSR50K1sULfi8omwOWw2y/a
        TemNwia81nLp2W7RbjwbCptwae6fbKhbaxEpgCbAaWMTSSINDJl3+bUiUgBR1ISXU+z0NL9Wz4YbRU3o
        8ev0bPhR0QT/WeARTIEmQEPHnyi6MObW5xFbjiaZ8A7OrmeFBdVXvn1NA2u6PytIYssRjglir9b122fj
        z7IRkPSDYm6cDTZ6jkwoTL6uho/lBwyHX5Xbh4Nu862l2sU3QWjchNrWBUzn6HjDEmvhv3YK2r+R89XN
        9eIUPFm4Eo2ZUP/CCJwVk/rOjJCm6nBhF/OSxarx+R/7h0OSnD9pdRpfGcLrF3JtB8p8DScgFvsZ85FF
        glCfCeEtjXVY6U8h5wm5RmDOYR4yeVBqNyH8tUHT4j/gNDldryKPE5nMEDJpLdRmQvgGIB3nDo+D/Gfl
        epXBxV4yYa0EN6E5BhQxHb4Z6ryT65bBET+RieqhzwRLdJOFSjTXAAQGVhuhViATTJvtI5PUS3UTmm8A
        Ao/L9VDvrVzfh8NPkgkaobIJrTEA0R2+DmpWM+EC2bhRypvQOgMQ/I4B1K1kwi2yYRgUbow93oKtNQAp
        3BNcffDwiGwUFrIJrTcAwWt9oA8enpANwsRrQnsMKAyfbxREl8CPxmSDsBkwoT0GILjsD33w3w+ekgc3
        A5wDgBvjYmpfq8Dnvs+A6+SBqoLLZLh67DLgPHmgyvT/lqn0VYDT5EGqg3MBBQP2kAeozrLezo9wzhGG
        zKvIA+KA4aSW4zQbuTNOkMH4kE+8B/158FdF4QXvAAAAAElFTkSuQmCC
</value>
  </data>
</root>